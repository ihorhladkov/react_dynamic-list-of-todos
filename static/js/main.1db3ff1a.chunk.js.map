{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","isActive","setIsActive","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","handleChosedTodo","TodoFilter","query","setQuery","filtredType","setFiltredType","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","setSelectedUser","selectedUser","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","loading","setLoading","todosList","todosCopy","filter","toLowerCase","trim","includes","preparedTodos","useEffect","finally","userId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1db3ff1a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  isActive: boolean,\n  setIsActive: (newStatus: boolean) => void;\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  isActive,\n  setIsActive,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const handleChosedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setIsActive(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light':\n                selectedTodo?.id === todo.id && isActive,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleChosedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye': selectedTodo?.id !== todo.id,\n                    'far fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","interface Props {\n  query: string;\n  setQuery: (newQuery: string) => void;\n  filtredType: string;\n  setFiltredType: (newFiltredType: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filtredType,\n  setFiltredType,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filtredType}\n            onChange={event => setFiltredType(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  isActive: boolean;\n  setIsActive: (newStatus: boolean) => void;\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n  setSelectedUser: (todo: User | null) => void,\n  selectedUser: User | null,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  isActive,\n  setIsActive,\n  selectedTodo,\n  setSelectedTodo,\n  setSelectedUser,\n  selectedUser,\n}) => {\n  const handleCloseModal = () => {\n    setIsActive(false);\n    setSelectedTodo(null);\n    setSelectedUser(null);\n  };\n\n  return (\n    <div\n      className={classNames('modal', {\n        'is-active': isActive,\n      })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleCloseModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? (\n                  'Done'\n                ) : (\n                  'Planned'\n                )}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst preparedTodos = (\n  todos: Todo[],\n  query: string,\n  filtredType: string,\n) => {\n  let todosCopy = [...todos].filter(todo => (\n    todo.title.toLowerCase().trim().includes(query.toLowerCase().trim())\n  ));\n\n  if (filtredType) {\n    todosCopy = todosCopy.filter(todo => {\n      switch (filtredType) {\n        case 'all':\n          return todosCopy;\n\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return null;\n      }\n    });\n  }\n\n  return todosCopy;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filtredType, setFiltredType] = useState<string>('all');\n  const [isActive, setIsActive] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const todosList = preparedTodos(todos, query, filtredType);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    getUser(selectedTodo?.userId).then(setSelectedUser);\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filtredType={filtredType}\n                setFiltredType={setFiltredType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todosList}\n                  isActive={isActive}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                  setIsActive={setIsActive}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isActive && (\n        <TodoModal\n          isActive={isActive}\n          setIsActive={setIsActive}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          selectedUser={selectedUser}\n          setSelectedUser={setSelectedUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}